generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Empleado {
  id                Int                 @id @default(autoincrement())
  cedula            String              @unique
  nombre            String
  apellido          String
  huellaDactilar    String?             @unique // Almacena un hash o ID único de la huella
  registros         RegistroAsistencia[]
  activo            Boolean             @default(true)
  fechaRegistro     DateTime            @default(now())
  ultimaActualizacion DateTime?         @updatedAt
}

model Visitante {
  id            Int                 @id @default(autoincrement())
  cedula        String              @unique
  nombre        String
  apellido      String
  empresa       String?
  motivo        String?
  registros     RegistroVisitante[]
  fechaRegistro DateTime            @default(now())
}

model RegistroAsistencia {
  id             Int           @id @default(autoincrement())
  empleadoId     Int
  empleado       Empleado      @relation(fields: [empleadoId], references: [id])
  tipoRegistro   TipoRegistro
  fecha          DateTime      @default(now())
  metodoRegistro MetodoRegistro
  observacion    String?
  deviceId       String?       // ID del dispositivo que registró la asistencia
}

model RegistroVisitante {
  id              Int       @id @default(autoincrement())
  visitanteId     Int
  visitante       Visitante @relation(fields: [visitanteId], references: [id])
  entrada         DateTime  @default(now())
  salida          DateTime?
  motivo          String
  personaVisitada String?
}

// Añadimos modelos para dispositivos y usuarios
model Dispositivo {
  id            String    @id
  nombre        String
  ubicacion     String
  token         String    @unique
  estado        String    @default("offline")
  ultimaSincronizacion DateTime?
  firmware      String?
  configuracion Json?
  comandos    Comando[]
}

model Usuario {
  id        String   @id @default(uuid())
  email     String   @unique
  nombre    String
  password  String   // En producción, almacenar hash de contraseña
  rol       Rol
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum TipoRegistro {
  ENTRADA
  SALIDA
  PERMISO
  COMISION
}

enum MetodoRegistro {
  HUELLA
  CEDULA
  MANUAL
}

enum Rol {
  admin
  hr
}

model Comando {
  id          String    @id @default(cuid())
  deviceId    String
  action      String
  params      Json      @default("{}")
  status      String    @default("pending") // pending, completed, failed
  result      String?
  createdAt   DateTime  @default(now())
  completedAt DateTime?
  
  dispositivo Dispositivo @relation(fields: [deviceId], references: [id])

  @@index([deviceId])
  @@index([status])
}
